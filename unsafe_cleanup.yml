---
# Copyright 2016 PingCAP, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# See the License for the specific language governing permissions and
# limitations under the License.

# The playbook of TiDB

- include: stop.yml

- hosts: all
  tasks:
    - name: clean systemd config
      shell: "rm -f /etc/systemd/system/{{ item }}"
      when: process_supervision == 'systemd' and ansible_user == "root"
      with_items:
        - grafana.service
        - prometheus.service
        - pushgateway.service
        - node_exporter.service
        - blackbox_exporter.service
        - pd*.service
        - pump.service
        - tidb*.service
        - tikv*.service
      vars:
        - ansible_become: false
        - ansible_become_user: root

    - name: clean systemd config
      shell: "rm -f /etc/systemd/system/{{ item }}"
      become: true
      when: process_supervision == 'systemd' and ansible_user != "root"
      with_items:
        - grafana.service
        - prometheus.service
        - pushgateway.service
        - node_exporter.service
        - blackbox_exporter.service
        - pd*.service
        - tidb*.service
        - pump.service
        - tikv*.service

    - name: killing all process
      shell: >
        killall -9 supervise;
        killall -9 node_exporter blackbox_exporter prometheus pushgateway grafana-server;
        killall -9 tikv-server tidb-server pd-server;
        killall -9 pump drainer;
        true

    - name: cleaning up wal dir
      file: path={{ wal_dir }} state=absent
      when: "'tikv_servers' in group_names and wal_dir is defined"

    - name: cleaning up raftdb dir
      file: path={{ raftdb_path }} state=absent
      when: "'tikv_servers' in group_names and raftdb_path is defined"

    - name: using rm command to clean up deploy_dir
      shell: "rm -rf {{ deploy_dir }}"

    - name: cleaning up deploy dir
      file: path={{ deploy_dir }} state=absent

- include: unsafe_cleanup_container.yml
  when: deployment_method == 'docker'
