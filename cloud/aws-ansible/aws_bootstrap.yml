---

# This play book is intend for one pass execution

- name: "Group nodes by OS distribution"
  hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"
      changed_when: false


- name: authorized access
  hosts: all
  gather_facts: true
  tags:
    - ssh
  tasks:
    - name: generate rsa key if not exists
      shell: |
        yes n | ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa || echo ok
    - name: Slup
      slurp:
        src: ".ssh/id_rsa.pub"
      register: rsa_pub_result

    - set_fact:
        rsa_pub_key: "{{ rsa_pub_result.content | b64decode | trim }}"


    - name: add to authrized_keys
      authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ hostvars[item].rsa_pub_key }}"
      with_items: "{{ groups.all }}"

#        ssh-keygen -R {{ item }};
    - name: add to know_hosts
      shell: |
        ssh-keygen -R {{ hostvars[item].ansible_hostname }};
        ssh-keygen -R {{ hostvars[item].ansible_default_ipv4.address }};
        ssh-keygen -R {{ hostvars[item].ansible_hostname }},{{ hostvars[item].ansible_default_ipv4.address }};
        (ssh-keyscan -H {{ hostvars[item].ansible_hostname }};
         ssh-keyscan -H {{ hostvars[item].ansible_default_ipv4.address }};
         ssh-keyscan -H {{ hostvars[item].ansible_hostname }},{{ hostvars[item].ansible_default_ipv4.address }}) | uniq >> ~/.ssh/known_hosts
      with_items: "{{ groups.all }}"


- name: Set Time Zone
  hosts: Ubuntu-14.04
  gather_facts: false
  become: true
  tasks:
    - name: Set timezone variables
      copy: content='Asia/Shanghai'
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
      notify:
        - update timezone
  handlers:
    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata

- name: do AWS host preparation
  hosts: Ubuntu-*
  gather_facts: false
  tasks:
    - name: disable apt key check
      lineinfile: >
        dest=/etc/apt/apt.conf.d/99skipkeycheck line="APT::Get::AllowUnauthenticated "true";"
        create=yes
      become: true
      
    - name: change apt mirror.list
      copy: src=sources.list dest=/etc/apt/sources.list mode=0644
      become: true
 
    - name: add apt-fast to apt sources.list.d
      lineinfile: >
        dest=/etc/apt/sources.list.d/saiarcot895-myppa-trusty.list
        line="deb http://ppa.launchpad.net/saiarcot895/myppa/ubuntu trusty main" 
        create=yes
      become: true

    - name: install apt-fast
      apt: name={{ item }} update_cache=yes
      become: true
      with_items:
        - apt-fast

    - name: add docker to apt sources.list.d
      lineinfile: > 
        dest=/etc/apt/sources.list.d/docker.list
        line="deb https://mirrors.tuna.tsinghua.edu.cn/docker/apt/repo ubuntu-trusty main"
        create=yes 
      become: true

    - name: update apt cache
      shell: apt-fast -y update

    # --skip-tags docker
    - name: install docker
      tags:
        - docker
      shell: >-
        creates=/usr/bin/docker
        apt-fast -y install docker-engine
      become: true

    - name: add user to docker group
      tags:
        - docker
      user: name=ubuntu groups=docker append=yes
      become: true

    - name: install perf/systemtab/unzip/ntp/zip
      shell: >-
        apt-fast -y install linux-tools-$(uname -r) systemtap unzip ntp zip iotop htop sysstat

    - name: add user to docker group
      user: name=ubuntu groups=stapusr append=yes
      become: true

    - name: add user to docker group
      user: name=ubuntu groups=stapdev append=yes
      become: true
