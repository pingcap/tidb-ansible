---

- name: vpc setup
  ec2_vpc:
    state: present
    cidr_block: 172.233.0.0/16
    resource_tags:
      Name: sre-vpc-ansible
      ManagedBy: "{{ managed_by }}"
      Creator: "{{ creator }}"
    subnets:
      - cidr: 172.233.1.0/24
        az: cn-north-1a
        resource_tags:
          Name: "sre-subnet-1a"
          Environment: "test"
          ManagedBy: ansible
          Creator: "{{ creator }}"
          Tier: "db"
      - cidr: 172.233.2.0/24
        az: cn-north-1b
        resource_tags:
          Name: "sre-subnet-1b"
          Environment: "test"
          ManagedBy: ansible
          Creator: "{{ creator }}"
          Tier: "db"
    internet_gateway: yes       # assign internet
    route_tables:
      - subnets:
          - 172.233.1.0/24
          - 172.233.2.0/24
        routes:
          - dest: 0.0.0.0/0
            gw: igw
    region: cn-north-1
  register: vpc

- name: tidb cluster group
  ec2_group:
    state: present
    name: sre-sg-ansible
    description: AWS VPC security group for SRE team
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      #
      - proto: tcp
        from_port: 0
        to_port: 0
        group_name: 'sre-sg-ansible'
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 172.233.0.0/16
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 3000
        to_port: 3000
        cidr_ip: 0.0.0.0/0
      #- proto: tcp
      #  from_port: 4000
      #  to_port: 4000
      #  cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9000
        to_port: 9050
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9090 # prometheus
        to_port: 9091   # pushgateway
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9200
        to_port: 9200
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 5601
        to_port: 5601
        cidr_ip: 0.0.0.0/0
    # outbound
    rules_egress:
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 0.0.0.0/0
    region: cn-north-1
  register: security_group

- name: tikv servers
  ec2:
    region: cn-north-1
    key_name: pingcap
    group: sre-sg-ansible       # or group_id
    instance_type: "{{ tikv_instance_type }}"
    image: "{{ image_ami }}"
    wait: yes
    wait_timeout: 500
    volumes:
      - device_name: /dev/xvdb
        volume_type: gp2
        volume_size: 80
        delete_on_termination: true
#   count: 1
    instance_tags:
      Name: sre-tikv-c2
      ManagedBy: "{{ managed_by }}"
      Creator: "{{ creator }}"
      Type: tikv
    count_tag:
      Type: tikv
      ManagedBy: "{{ managed_by }}"
    exact_count: "{{ tikv_count }}"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}" # cn-north-1a
    assign_public_ip: yes

- name: pd servers
  ec2:
    region: cn-north-1
    key_name: pingcap
    group: sre-sg-ansible       # or group_id
    instance_type: "{{ pd_instance_type }}"
    image: "{{ image_ami }}"
    wait: yes
    wait_timeout: 500
#   count: 1
    instance_tags:
      Name: sre-pd-c2
      ManagedBy: "{{ managed_by }}"
      Creator: "{{ creator }}"
      Type: pd
    count_tag:
      Type: pd
      ManagedBy: "{{ managed_by }}"
    exact_count: "{{ pd_count }}"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}" # cn-north-1a
    assign_public_ip: yes

- name: tidb servers
  ec2:
    region: cn-north-1
    key_name: pingcap
    group: sre-sg-ansible       # or group_id
    instance_type: "{{ tidb_instance_type }}"
    image: "{{ image_ami }}"
    wait: yes
    wait_timeout: 500
#   count: 1
    instance_tags:
      Name: sre-tidb-c1
      ManagedBy: "{{ managed_by }}"
      Creator: "{{ creator }}"
      Type: tidb
    count_tag:
      Type: tidb
      ManagedBy: "{{ managed_by }}"
    exact_count: "{{ tidb_count }}"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}" # cn-north-1a
    assign_public_ip: yes


- name: monitoring servers
  ec2:
    region: cn-north-1
    key_name: pingcap
    group: sre-sg-ansible       # or group_id
    instance_type: "{{ monitoring_instance_type }}"
    image: "{{ image_ami }}"
    wait: yes
    wait_timeout: 500
#   count: 1
    volumes:
      - device_name: /dev/xvdb
        volume_type: gp2
        volume_size: 50
        delete_on_termination: false
    instance_tags:
      Name: sre-mon-c1
      ManagedBy: "{{ managed_by }}"
      Creator: "{{ creator }}"
      Type: monitoring
    count_tag:
      Type: monitoring
      ManagedBy: "{{ managed_by }}"
    exact_count: "{{ monitoring_count }}"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}" # cn-north-1a
    assign_public_ip: yes
