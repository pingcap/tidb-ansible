---
# Copyright 2016 PingCAP, Inc.

# The rolling update playbook of TiDB

- name: check config locally
  hosts: localhost
  tags:
    - always
  roles:
    - check_config_static

- name: gather all facts, and check dest
  hosts: all
  gather_facts: true
  tags:
    - always
  roles:
    - check_config_dynamic
    - common

- name: rolling update PD cluster
  hosts: pd_servers
  gather_facts: false
  serial: 1
  tags:
    - pd
  roles:
    - { role: pd, tags: ["deploy"] }
  post_tasks:
    - name: stop PD
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./stop_pd.sh

    - name: wait PD down
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ pd_client_port }} state=stopped

    - name: start PD
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./start_pd.sh

    - name: wait PD up
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ pd_client_port }} state=present


- name: rolling update TiKV cluster
  hosts: tikv_servers
  gather_facts: false
  serial: 1
  tags:
    - tikv
  roles:
    - { role: tikv, tags: ["deploy"] }
  post_tasks:
    - name: stop TiKV
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./stop_tikv.sh;

    - name: wait TiKV down
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ tikv_port }} state=stopped

    - name: start TiKV
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./start_tikv.sh

    - name: wait TiKV up
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ tikv_port }} state=present delay=20


- name: rolling update TiDB cluster
  hosts: tidb_servers
  gather_facts: false
  serial: 1
  tags:
    - tidb
  roles:
    - { role: tidb, tags: ["deploy"] }
  post_tasks:
    - name: stop TiDB
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./stop_tidb.sh;

    - name: wait TiDB down
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ tidb_port }} state=stopped

    - name: start TiDB
      tags:
        - restart
      shell: cd {{ deploy_dir }}/scripts && ./start_tidb.sh

    - name: wait TiDB up
      tags:
        - restart
      wait_for: host={{ ansible_default_ipv4.address }} port={{ tidb_port }} state=present
