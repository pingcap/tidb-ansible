---
# tasks file for tidb

- name: create deploy directories
  file: path="{{ item }}" state=directory mode=0755
  with_items:
  - "{{ tidb_log_dir }}"
  - "{{ tidb_conf_dir }}"

- include: check_certs.yml
  when: enable_tls

- include: gen_certs.yml
  when: enable_tls

- include: install_certs.yml
  when: enable_tls

# config part
- name: load customized config
  include_vars: file={{ playbook_dir }}/conf/tidb.yml name=tidb_conf_custom

- name: load default config
  include_vars: file=default.yml name=tidb_conf_default

- name: generate metrics config
  set_fact:
    tidb_conf_generated:
      status:
        metrics-addr: >-
          {{ hostvars[groups.monitoring_servers[0]].ansible_host | default(hostvars[groups.monitoring_servers[0]].inventory_hostname) ~ ':' ~
           (hostvars.get(groups.monitoring_servers.0).pushgateway_port | default('9091')) |
           default('') }}

- name: combine final config
  set_fact:
    tidb_conf: "{{ tidb_conf_generated | with_default_dicts(tidb_conf_custom, tidb_conf_default) }}"

- debug: var=tidb_conf

- name: create config file
  template: src=tidb.toml.j2 dest={{ deploy_dir }}/conf/tidb.toml mode=0644 backup=yes
  register: tidb_conf_st

- name: backup conf file
  command: mv "{{ tidb_conf_st.backup_file }}" "{{ backup_dir }}"
  when: tidb_conf_st.changed and tidb_conf_st.backup_file is defined

- include: "{{ deployment_method }}_deployment.yml"

- name: prepare firewalld white list
  set_fact:
    firewalld_ports: "{{ [tidb_port ~ '/tcp', tidb_status_port ~ '/tcp'] + firewalld_ports }}"
