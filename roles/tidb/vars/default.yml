---
# default configuration file for TiDB in yaml format

global:
  # TiDB Configuration.

  # TiDB server host.
  host: "0.0.0.0"

  # TiDB server port.
  # port: 4000

  # Registered store name, [tikv, mocktikv]
  store: "tikv"

  # TiDB storage path.
  # path: "/tmp/tidb"

  # The socket file to use for connection.
  socket: ""

  # Schema lease duration, very dangerous to change only if you know what you do.
  lease: "45s"

  # The limit of concurrent executed sessions.
  token-limit: 1000

  # Only print a log when out of memory quota.
  # Valid options: ["log", "cancel"]
  oom-action: "cancel"

  # Set the memory quota for a query in bytes. Default: 32GB
  # mem-quota-query: 34359738368

  # Make "kill query" behavior compatible with MySQL. It's not recommend to
  # turn on this option when TiDB server is behind a proxy.
  compatible-kill-query: false

  # check mb4 value in utf8 is used to control whether to check the mb4 characters when the charset is utf8.
  # check-mb4-value-in-utf8: true

  # alter-primary-key is used to control alter primary key feature. Default is false, indicate the alter primary key feature is disabled.
  # If it is true, we can add the primary key by "alter table". However, if a table already exists before the switch is turned true and
  # the data type of its primary key column is an integer, the primary key cannot be dropped.
  alter-primary-key: false

  # server-version is used to change the version string of TiDB in the following scenarios:
  # 1. the server version returned by builtin-function `VERSION()`.
  # 2. the server version filled in handshake packets of MySQL Connection Protocol, see https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake for more details.
  # if server-version = "", the default value(original TiDB version string) is used.
  server-version: ""

  # max-index-length is used to deal with compatibility issues from v3.0.7 and previous version upgrades. It can only be in [3072, 3072*4].
  max-index-length: 3072

  # Whether new collations are enabled, as indicated by its name, this configuration entry take effect ONLY when a TiDB cluster bootstraps for the first time.
  new_collations_enabled_on_first_bootstrap: false

  # When enabled, usage data (for example, instance versions) will be reported to PingCAP periodically for user experience analytics.
  # If this config is set to `false` on all TiDB servers, telemetry will be always disabled regardless of the value of the global variable `tidb_enable_telemetry`.
  # See PingCAP privacy policy for details: https://pingcap.com/en/privacy-policy/
  enable-telemetry: true

log:
  # Log level: debug, info, warn, error, fatal.
  level: "info"

  # Queries with execution time greater than this value will be logged. (Milliseconds)
  slow-threshold: 300

  # Queries with internal result greater than this value will be logged.
  expensive-threshold: 10000

status:
  # TiDB status host.
  status-host: "0.0.0.0"

  # TiDB status port.
  status-port: 10080

  # Prometheus pushgateway address, leaves it empty will disable prometheus push.
  metrics-addr: ""

  # Prometheus client push interval in second, set \"0\" to disable prometheus push.
  metrics-interval: 15

performance:
  # Max CPUs to use, 0 use number of CPUs in the machine.
  max-procs: 0

  # Max memory size to use, 0 use the total usable memory in the machine.
  # max-memory: 0

  # StmtCountLimit limits the max count of statement inside a transaction.
  stmt-count-limit: 5000

  # Stats lease duration, which influences the time of analyze and stats load.
  stats-lease: "3s"
  txn-total-size-limit: 104857600

proxy_protocol:

prepared_plan_cache:
  enabled: false
  capacity: 100
  memory-guard-ratio: 0.1

opentracing:
  # Enable opentracing.
  enable: false

  # Whether to enable the rpc metrics.
  rpc-metrics: false

  sampler:
    # Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
    type: "const"

    # Param is a value passed to the sampler.
    # Valid values for Param field are:
    # - for "const" sampler, 0 or 1 for always false/true respectively
    # - for "probabilistic" sampler, a probability between 0 and 1
    # - for "rateLimiting" sampler, the number of spans per second
    # - for "remote" sampler, param is the same as for "probabilistic"
    # and indicates the initial sampling rate before the actual one
    # is received from the mothership
    param: 1.0

    # SamplingServerURL is the address of jaeger-agent's HTTP sampling server
    sampling-server-url: ""

    # MaxOperations is the maximum number of operations that the sampler
    # will keep track of. If an operation is not tracked, a default probabilistic
    # sampler will be used rather than the per operation specific sampler.
    max-operations: 0

    # SamplingRefreshInterval controls how often the remotely controlled sampler will poll
    # jaeger-agent for the appropriate sampling strategy.
    sampling-refresh-interval: 0

  reporter:
    # QueueSize controls how many spans the reporter can keep in memory before it starts dropping
    # new spans. The queue is continuously drained by a background go-routine, as fast as spans
    # can be sent out of process.
    queue-size: 0

    # BufferFlushInterval controls how often the buffer is force-flushed, even if it's not full.
    # It is generally not useful, as it only matters for very low traffic services.
    buffer-flush-interval: 0

    # LogSpans, when true, enables LoggingReporter that runs in parallel with the main reporter
    # and logs all submitted spans. Main Configuration.Logger must be initialized in the code
    # for this option to have any effect.
    log-spans: false

    #  LocalAgentHostPort instructs reporter to send spans to jaeger-agent at this address
    local-agent-host-port: ""

tikv_client:
  # Max gRPC connections that will be established with each tikv-server.
  grpc-connection-count: 4

  # After a duration of this time in seconds if the client doesn't see any activity it pings
  # the server to see if the transport is still alive.
  grpc-keepalive-time: 10

  # After having pinged for keepalive check, the client waits for a duration of Timeout in seconds
  # and if no activity is seen even after that the connection is closed.
  grpc-keepalive-timeout: 3

  # max time for commit command, must be twice bigger than raft election timeout.
  commit-timeout: "41s"

  # Max batch size in gRPC.
  # max-batch-size: 128

  # Overload threshold of TiKV.
  # overload-threshold: 200

  # Max batch wait time in nanosecond to avoid waiting too long. 0 means disable this feature.
  # max-batch-wait-time: 0

  # Batch wait size, to avoid waiting too long.
  # batch-wait-size: 8

txn_local_latches:

binlog:
  # Socket file to write binlog.
  # binlog-socket: ""

  # WriteTimeout specifies how long it will wait for writing binlog to pump.
  write-timeout: "15s"

  # If IgnoreError is true, when writting binlog meets error, TiDB would stop writting binlog,
  # but still provide service.
  ignore-error: false

pessimistic_txn:
  # enable pessimistic transaction.
  enable: true

  # max retry count for a statement in a pessimistic transaction.
  max-retry-count: 256

experimental:
  # enable column attribute `auto_random` to be defined on the primary key column.
  allow-auto-random: false

  # enable creating expression index.
  allow-expression-index: false
