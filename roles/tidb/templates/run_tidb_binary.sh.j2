#!/bin/bash
set -e

ulimit -n 1000000

# WARNING: This file was auto-generated. Do not edit!
#          All your edit might be overwritten!
DEPLOY_DIR={{ deploy_dir }}

cd "${DEPLOY_DIR}" || exit 1

{% set my_name = hostvars[inventory_hostname].inventory_hostname -%}

{% set my_ip = hostvars[inventory_hostname].ansible_host | default(hostvars[inventory_hostname].inventory_hostname) -%}

{% set all_pd = [] -%}
{% set pd_hosts = groups.pd_servers %}
{% for host in pd_hosts -%}
  {% set pd_ip = hostvars[host].ansible_host | default(hostvars[host].inventory_hostname) -%}
  {% set pd_port = hostvars[host].pd_client_port -%}
  {% set _ = all_pd.append("%s:%s" % (pd_ip, pd_port)) -%}
{% endfor -%}

{% set all_node_on_instance = [] -%}
{% for node in groups.tidb_servers -%}
  {% set node_ip = hostvars[node].ansible_host | default(hostvars[node].inventory_hostname) -%}
  {% if node_ip == my_ip -%}
    {% set _ = all_node_on_instance.append(hostvars[node].inventory_hostname) -%}
  {% endif -%}
{% endfor -%}


{% set numaNodeId = [] -%}
{% if numactl_info.failed -%}
  {% set set_numa_bind = false -%}
{% elif all_node_on_instance | length == numa_node_count.stdout | int -%}
  {% set set_numa_bind = true -%}
  {% for inventory_name in all_node_on_instance -%}
    {% if inventory_name == my_name -%}
      {% set _ = numaNodeId.append(loop.index0) -%}
    {% endif -%}
  {% endfor -%}
{% endif %}

export TZ={{ timezone }}

{% if set_numa_bind|default(false) -%}
  exec numactl --cpunodebind={{ numaNodeId.0 }} --membind={{ numaNodeId.0 }} bin/tidb-server \
{% else -%}
  exec bin/tidb-server \
{% endif %}
    -P {{ tidb_port }} \
    --status="{{ tidb_status_port }}" \
    --advertise-address="{{ my_ip }}" \
    --path="{{ all_pd | join(',') }}" \
    --config=conf/tidb.toml \
{% if enable_binlog|default(false) %}
    --enable-binlog \
{% endif %}
{% if tidb_affinity_cpu|default(false) %}
    --affinity-cpus="{{tidb_affinity_cpu | join(',')}}" \
{% endif %}
    --log-slow-query="{{ tidb_log_dir }}/{{ tidb_slow_query_filename }}" \
    --log-file="{{ tidb_log_dir }}/{{ tidb_log_filename }}" 2>> "{{ tidb_log_dir }}/{{ tidb_stderr_filename }}"
