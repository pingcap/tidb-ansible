---

- name: create deploy directories (1/2)
  file: path="{{ item }}" state=directory mode=0755
  with_items:
  - "{{ deploy_dir }}/opt"

- name: deploy grafana binary
  unarchive: >
    creates="{{ deploy_dir }}/opt/grafana/bin/grafana-server"
    src={{ downloads_dir }}/grafana-{{ grafana_version }}.tar.gz dest={{ deploy_dir }}/opt/

- name: rename grafana deploy dir
  shell: >
    creates="{{ deploy_dir }}/opt/grafana/bin/grafana-server"
    mv {{ deploy_dir }}/opt/grafana-{{ grafana_version }} "{{ deploy_dir }}/opt/grafana"

- name: create deploy directories (2/2)
  file: path="{{ item }}" state=directory mode=0755
  with_items:
  - "{{ grafana_log_dir }}"
  - "{{ grafana_data_dir }}"
  - "{{ grafana_dashboards_dir }}"
  - "{{ grafana_plugins_dir }}"
  - "{{ deploy_dir }}/status/{{ role_name }}"

- name: create grafana configuration file
  template: >
    src=grafana.ini.j2 dest={{ deploy_dir }}/opt/grafana/conf/grafana.ini mode=0644

- name: push data source file
  template: src=data_source.json.j2 dest={{ grafana_data_dir }}/data_source.json mode=0644

- name: create scripts
  include_role:
    name: scripts
  vars:
    this_role_name: grafana

- name: create run script
  template:
    src: "{{ item }}_{{ role_name }}.sh.j2"
    dest: "{{ deploy_dir }}/scripts/{{ item }}_{{ role_name }}.sh"
    mode: "0755"
    backup: yes
  with_items:
    - run
  vars:
    role_status_dir: status/{{ role_name }}

- name: prepare firewalld white list
  set_fact:
    firewalld_ports: "{{ [grafana_port ~ '/tcp'] + firewalld_ports }}"
