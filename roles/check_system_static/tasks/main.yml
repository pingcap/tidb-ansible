---

- name: Disk space check - Fail task when disk is full
  shell: df -h . | tail -n1
  register: disk_space_st
  failed_when: " '100%' in disk_space_st.stdout "
  changed_when: false

- name: get facts
  setup:
    gather_subset: hardware
    gather_timeout: 30

- name: Preflight check - Linux OS family and distribution version
  fail:
    msg: "System versions lower than Red Hat Enterprise Linux / CentOS 7.3 have been deprecated. Please use CentOS 7.3 and above. See https://github.com/pingcap/docs/blob/master/hardware-and-software-requirements.md."
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution in ['CentOS', 'RedHat']
    - ansible_distribution_major_version != '7'

- name: Get systemd version
  yum:
    list: systemd
  register: systemd_info
  when: ansible_os_family == 'RedHat'

- set_fact:
    systemd_version: "{{ systemd_info.results | json_query(query) }}"
  vars:
    query: "[?yumstate=='installed'].version"
  when: ansible_os_family == 'RedHat'

- set_fact:
    systemd_release: "{{ systemd_info.results | json_query(query) }}"
  vars:
    query: "[?yumstate=='installed'].release"
  when: ansible_os_family == 'RedHat'

- name: Preflight check - Systemd version
  fail:
    msg: "Current systemd version is {{ systemd_version.0 }}-{{ systemd_release.0 }} (below 219-52.el7), there are some memory bugs. Refer to https://access.redhat.com/discussions/3536621"
  when:
    - ansible_os_family == 'RedHat'
    - systemd_version[0] < '219' or (systemd_version[0] == '219' and systemd_release[0] < '52.el7')

- name: Deploy epollexclusive script
  copy: src="{{ script_dir }}/check/epollexclusive-{{ cpu_architecture }}" dest="{{ deploy_dir }}/epollexclusive-{{ cpu_architecture }}" mode=0755

- name: Preflight check - Check if the operating system supports EPOLLEXCLUSIVE
  shell: "{{ deploy_dir }}/epollexclusive-{{ cpu_architecture }}"
  register: epollexclusive_check

- name: Clean epollexclusive script
  file: path={{ deploy_dir }}/epollexclusive-{{ cpu_architecture }} state=absent

- name: Preflight check - Fail when epollexclusive is unavailable
  fail:
    msg: "The current machine may be a docker virtual machine, and the corresponding physical machine operating system does not support epollexclusive, please upgrade the Linux kernel (the minimum version is 3.10.0-386.el7)"
  when: epollexclusive_check.stdout.find("True") == -1

- name: Deploy check_cpufreq script
  copy: src="{{ script_dir }}/check/check_cpufreq.py" dest="{{ deploy_dir }}/check_cpufreq.py" mode=0755

- name: Preflight check - Check CPUfreq governors available in the kernel
  shell: "python {{ deploy_dir }}/check_cpufreq.py --available-governors"
  register: cpufreq_available_governors

- name: Preflight check - Check the currently active governor
  shell: "python {{ deploy_dir }}/check_cpufreq.py --current-governor"
  register: cpufreq_current_governor

- name: Preflight check - Fail when CPU frequency governor is not set to performance mode
  fail:
    msg: "To achieve maximum performance, it is recommended to set The CPU frequency governor to performance mode, see https://github.com/pingcap/docs/blob/master/online-deployment-using-ansible.md#step-7-configure-the-cpufreq-governor-mode-on-the-target-machine."
  when:
    - cpufreq_available_governors.stdout.find("performance") != -1
    - cpufreq_current_governor.stdout.find("performance") == -1

- name: Clean check_cpufreq script
  file: path={{ deploy_dir }}/check_cpufreq.py state=absent

- name: Preflight check - Check Linux kernel overcommit_memory parameter
  shell: "sysctl -n vm.overcommit_memory"
  become: true
  register: vm_overcommit_memory

- name: Preflight check - Fail when Linux kernel vm.overcommit_memory parameter is set to 2
  fail:
    msg: "It is not recommended to set vm.overcommit_memory to 2, set it to 0 or 1."
  when: vm_overcommit_memory.stdout | int == 2
