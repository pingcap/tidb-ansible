---

- set_fact:
    tidb_check_dir: "/tmp/tidb_check_config"

- name: Create temporary check directory
  file: name={{ tidb_check_dir }} state=directory

- set_fact:
    unistore_log_dir: "{{ deploy_dir }}/log"

- name: Load unistore vars
  include_vars: file={{ playbook_dir }}/roles/unistore/defaults/main.yml name=unistore_vars_check

- name: "Load customized config: tidb-ansible/conf/unistore.yml"
  include_vars: file={{ playbook_dir }}/conf/unistore.yml name=unistore_conf_custom_check

- name: Load default config
  include_vars: file={{ playbook_dir }}/roles/unistore/vars/default.yml name=unistore_conf_default_check

- name: generate dynamic config
  set_fact:
    unistore_conf_generated_check:
      server:
        labels: "{{ unistore_vars_check.labels }}"
      rocksdb:
        wal-dir: "{{ unistore_vars_check.wal_dir }}"
      raftstore:
        raftdb-path: "{{ unistore_vars_check.raftdb_path }}"
      security:
        ca-path: >-
          {%- if enable_tls|default(false) -%}{{ unistore_cert_dir }}/ca.pem{%- else -%}{%- endif -%}
        cert-path: >-
          {%- if enable_tls|default(false) -%}{{ unistore_cert_dir }}/unistore-server-{{ unistore_host }}.pem{%- else -%}{%- endif -%}
        key-path: >-
          {%- if enable_tls|default(false) -%}{{ unistore_cert_dir }}/unistore-server-{{ unistore_host }}-key.pem{%- else -%}{%- endif -%}

- name: Generate final config
  set_fact:
    unistore_conf: "{{ unistore_conf_custom_check | with_default_dicts(unistore_conf_generated_check, unistore_conf_default_check) | update_default_dicts }}"

- name: Create configuration file
  template: src={{ playbook_dir }}/roles/unistore/templates/unistore.toml.j2 dest={{ tidb_check_dir }}/unistore.toml mode=0644 backup=yes

- name: Deploy unistore binary
  copy: src="{{ resources_dir }}/bin/unistore-server" dest="{{ tidb_check_dir }}/" mode=0755 backup=yes

# TODO check config
#- name: Check unistore config
#  shell: cd {{ tidb_check_dir }} && ./unistore-server --config ./unistore.toml
#  #shell: cd {{ tidb_check_dir }} && ./tikv-server --pd-endpoints pd:port --config ./tikv.toml --config-check
#  register: unistore_check_result

- name: Delete temporary check directory
  file: name={{ tidb_check_dir }} state=absent

# TODO
#- name: Check result
#  fail:
#    msg: "unistore config error"
#  when: "'successful' not in unistore_check_result.stdout"
