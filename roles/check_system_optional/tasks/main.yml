---

- name: Preflight check - Check TiDB server's CPU
  fail:
    msg: "This machine does not have sufficient CPU to run TiDB, at least {{ tidb_min_cpu }} cores."
  when:
    - "'tidb_servers' in group_names"
    - ansible_processor_vcpus < tidb_min_cpu|int

- name: Preflight check - Check TiKV server's CPU
  fail:
    msg: "This machine does not have sufficient CPU to run TiKV, at least {{ tikv_min_cpu }} cores."
  when:
    - "'tikv_servers' in group_names"
    - ansible_processor_vcpus < tikv_min_cpu|int

- name: Preflight check - Check PD server's CPU
  fail:
    msg: "This machine does not have sufficient CPU to run PD, at least {{ pd_min_cpu }} cores."
  when:
    - "'pd_servers' in group_names"
    - ansible_processor_vcpus < pd_min_cpu|int

- name: Preflight check - Check Monitor server's CPU
  fail:
    msg: "This machine does not have sufficient CPU to run Monitor, at least {{ monitor_min_cpu }} cores."
  when:
    - "'monitoring_servers' in group_names"
    - ansible_processor_vcpus < monitor_min_cpu|int

- name: Preflight check - Check TiDB server's RAM
  fail:
    msg: "This machine does not have sufficient RAM to run TiDB, at least {{ tidb_min_ram }} MB."
  when:
    - "'tidb_servers' in group_names"
    - ansible_memtotal_mb < tidb_min_ram|int

- name: Preflight check - Check TiKV server's RAM
  fail:
    msg: "This machine does not have sufficient RAM to run TiKV, at least {{ tikv_min_ram }} MB."
  when:
    - "'tikv_servers' in group_names"
    - ansible_memtotal_mb < tikv_min_ram|int

- name: Preflight check - Check PD server's RAM
  fail:
    msg: "This machine does not have sufficient RAM to run PD, at least {{ pd_min_ram }} MB."
  when:
    - "'pd_servers' in group_names"
    - ansible_memtotal_mb < pd_min_ram|int

- name: Preflight check - Check Monitor server's RAM
  fail:
    msg: "This machine does not have sufficient RAM to run Monitor, at least {{ monitor_min_ram }} MB."
  when:
    - "'monitoring_servers' in group_names"
    - ansible_memtotal_mb < monitor_min_ram|int

- name: Set deploy_user - set ansible_user as default
  set_fact:
    deploy_user: "{{ ansible_user }}"
  when: deploy_user is not defined

- name: Set deploy_dir if not presented
  set_fact: deploy_dir="/home/{{ deploy_user }}/deploy"
  when: deploy_dir is not defined

- name: Determine which mountpoint deploy dir exists on
  shell: "df {{ deploy_dir }} | tail -n1 | awk '{print $NF}'"
  register: deploy_partition
  changed_when: False

- set_fact:
    tidb_disk_alert: "true"
  when:
    - "'tidb_servers' in group_names"
    - item.mount == deploy_partition.stdout
    - item.size_available < tidb_min_disk|int
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Check TiDB server's disk space
  debug:
    msg: 'The file system mounted at {{ deploy_partition.stdout }} does not meet minimum disk space requirement: at least {{ tidb_min_disk/1000000000 }} GB.'
  when:
    - tidb_disk_alert is defined
    - tidb_disk_alert
    - "'tidb_servers' in group_names"

- set_fact:
    tikv_disk_alert: "true"
  when:
    - "'tikv_servers' in group_names"
    - item.mount == deploy_partition.stdout
    - item.size_available < tikv_min_disk|int
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Check TiKV server's disk space
  debug:
    msg: 'The file system mounted at {{ deploy_partition.stdout }} does not meet minimum disk space requirement: at least {{ tikv_min_disk/1000000000 }} GB.'
  when:
    - tikv_disk_alert is defined
    - tikv_disk_alert
    - "'tikv_servers' in group_names"

- set_fact:
    pd_disk_alert: "true"
  when:
    - "'pd_servers' in group_names"
    - item.mount == deploy_partition.stdout
    - item.size_available < pd_min_disk|int
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Check PD server's disk space
  debug:
    msg: 'The file system mounted at {{ deploy_partition.stdout }} does not meet minimum disk space requirement: at least {{ pd_min_disk/1000000000 }} GB.'
  when:
    - pd_disk_alert is defined
    - pd_disk_alert
    - "'pd_servers' in group_names"

- set_fact:
    monitor_disk_alert: "true"
  when:
    - "'monitoring_servers' in group_names"
    - item.mount == deploy_partition.stdout
    - item.size_available < monitor_min_disk|int
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Check Monitor server's disk space
  debug:
    msg: 'The file system mounted at {{ deploy_partition.stdout }} does not meet minimum disk space requirement: at least {{ monitor_min_disk/1000000000 }} GB.'
  when:
    - monitor_disk_alert is defined
    - monitor_disk_alert
    - "'monitoring_servers' in group_names"
