---
# bootstrap a machine and begin deployment

- name: gather facts
  setup:
  become: false
  become_user: root
  when:
    - ansible_user == 'root'
  vars: # ugly workaround
    - ansible_become: false

- name: gather facts
  setup:
  when:
    - ansible_user != 'root'

- name: group hosts by distribution
  group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"
  changed_when: false

# this fixes include + become
- name: guess deploy_user - set ansible_user as default
  set_fact:
    deploy_user: "{{ ansible_user }}"
  when: deploy_user is not defined

- name: guess deploy_user - use become_user under root
  set_fact:
    deploy_user: "{{ ansible_become_user }}"
  when: deploy_user == 'root' and ansible_become_user is defined

- name: guess deploy_user - use become_user under ansible_user
  set_fact:
    deploy_user: "{{ ansible_become_user }}"
  when: ansible_become_user != ansible_user and ansible_become_user is defined

- name: create group
  group: name="{{ deploy_user }}"
  when:
    - ansible_user != 'root' and deploy_user != ansible_user
  vars: # ugly workaround
    - ansible_become: true
    - ansible_become_user: root

- name: create account
  user: name="{{ deploy_user }}" group="{{ deploy_user }}"
  when:
    - ansible_user != 'root' and deploy_user != ansible_user 
  vars: # ugly workaround
    - ansible_become: true
    - ansible_become_user: root

- name: Set deploy dir if not presented
  set_fact: deploy_dir="/home/{{ deploy_user }}/deploy"
  when: deploy_dir is not defined

- include: root_tasks.yml
  static: no
  become: false
  become_user: root
  when:
    - ansible_user == 'root'
  vars: # ugly workaround
    - ansible_become: false
    - ansible_become_user: root

- include: root_tasks.yml
  static: no
  when:
    - ansible_user != 'root'
  vars: # ugly workaround
    - ansible_become: true
    - ansible_become_user: root
