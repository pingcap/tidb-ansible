---

- name: create deploy directories
  file: path={{ item }} state=directory mode=0755
  with_items:
  - "{{ prometheus_log_dir }}"
  - "{{ prometheus_data_dir }}"
  - "{{ deploy_dir }}/status/{{ role_name }}"

- name: create configuration file
  template: src=prometheus.yml.j2 dest={{ deploy_dir }}/conf/prometheus.yml mode=0644 backup=yes
  register: prometheus_conf_st

- name: backup configuration file
  command: mv "{{ prometheus_conf_st.backup_file }}" "{{ backup_dir }}"
  when: prometheus_conf_st.changed and prometheus_conf_st.backup_file is defined

- name: copy alert rules file
  copy: src={{ item }} dest="{{ deploy_dir }}/conf/{{ item }}" mode=0644     backup=yes
  with_items:
    - node.rules.yml
    - bypass.rules.yml
    - pd.rules.yml
    - tidb.rules.yml
    - tikv-{{ tikv_metric_method }}.rules.yml
    - binlog.rules.yml
    - blacker.rules.yml
    - kafka.rules.yml
    - lightning.rules.yml
  register: alert_rules_st

- name: backup alert rules file
  command: mv "{{ item.backup_file }}" "{{ backup_dir }}"
  when:
    - item.changed
    - item.backup_file is defined
  with_items: "{{ alert_rules_st.results }}"

- name: set alert rules label changes
  replace: >
    dest={{ deploy_dir }}/conf/{{ item }}
    regexp="ENV_LABELS_ENV"
    replace="{{ cluster_name }}"
  with_items:
    - node.rules.yml
    - bypass.rules.yml
    - pd.rules.yml
    - tidb.rules.yml
    - tikv-{{ tikv_metric_method }}.rules.yml
    - binlog.rules.yml
    - blacker.rules.yml
    - kafka.rules.yml

- include_tasks: "{{ deployment_method }}_deployment.yml"

- name: prepare firewalld white list
  set_fact:
    firewalld_ports: "{{ [prometheus_port ~ '/tcp'] + firewalld_ports }}"
