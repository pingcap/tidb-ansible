---

- name: Disk space check - Fail task when disk is full
  raw: df -h . | tail -n1
  register: disk_space_st
  failed_when: " '100%' in disk_space_st.stdout "
  changed_when: false

- name: get facts
  setup:

- name: Preflight check - System version
  fail:
    msg: "Red Hat Enterprise Linux/CentOS 6 is deprecated. Please use CentOS 7.3 and above. See https://github.com/pingcap/docs/blob/master/op-guide/recommendation.md"
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"

- name: Preflight check - Set NTP service status
  shell: ntpstat | grep -w synchronised | wc -l
  register: ntp_st
  changed_when: false
  when: enable_ntpd

- name: Preflight check - NTP service
  fail:
    msg: "NTP service is not running or ntpstat is not synchronised to NTP server. See https://github.com/pingcap/docs/blob/master/op-guide/ansible-deployment.md#how-to-check-whether-the-ntp-service-is-normal ."
  when:
    - enable_ntpd
    - ntp_st.stdout|int != 1

- name: Guess deploy_user - set ansible_user as default
  set_fact:
    deploy_user: "{{ ansible_user }}"
  when: deploy_user is not defined

- name: Guess deploy_user - use become_user under root
  set_fact:
    deploy_user: "{{ ansible_become_user }}"
  when: deploy_user == 'root' and ansible_become_user is defined and ansible_become_user

- name: Set deploy dir if not presented
  set_fact: deploy_dir="/home/{{ deploy_user }}/deploy"
  when: deploy_dir is not defined

- name: Preflight check - Deploy user
  fail:
    msg: Never deploy under root user
  when: deploy_user=='root'

- name: Determine which mountpoint deploy dir exists on
  shell: "df {{ deploy_dir }} | tail -n1 | awk '{print $NF}'"
  register: deploy_partition
  changed_when: False

- set_fact:
    xfs_filesystem: "true"
  when: "'tikv_servers' in group_names and item.mount == deploy_partition.stdout and item.fstype == 'xfs'"
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Check bug if file system is xfs
  shell: cd {{ deploy_dir }} && fallocate -n -o 0 -l 9192 tidb_test && printf 'a%.0s' {1..5000} > tidb_test && truncate -s 5000 tidb_test && fallocate -p -n -o 5000 -l 4192 tidb_test && LANG=en_US.UTF-8  stat tidb_test |awk 'NR==2{print $2}'
  register: xfs_result
  when: "'tikv_servers' in group_names and xfs_filesystem is defined and xfs_filesystem"

- name: Preflight check - Clean check file for xfs file system
  file: path={{ deploy_dir }}/tidb_test state=absent

- name: Preflight check - Does deploy dir meet ext4 or xfs file system requirement[1]
  set_fact:
    fssystem_check_result: true
  when: "('tikv_servers' in group_names and item.mount == deploy_partition.stdout and item.fstype == 'ext4') or ('tikv_servers' in group_names and xfs_filesystem is defined and xfs_filesystem and xfs_result.stdout|int == 5000)"
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Does deploy dir meet ext4 or xfs file system requirement[2]
  fail:
    msg: 'The file system mounted at {{ item.mount }} does not meet ext4 or xfs file system requirement'
  when: "'tikv_servers' in group_names and item.mount == deploy_partition.stdout and fssystem_check_result is not defined"
  with_items: "{{ ansible_mounts }}"
