---

- name: disk space check - fail when disk is full
  raw: df -h . | tail -n1
  register: disk_space_st
  failed_when: " '100%' in disk_space_st.stdout "
  changed_when: false
  vars:
    ansible_become: false

# Debian GNU/Linux, Ubuntu, Fedora, CentOS, CoreOS
- name: Get distro name from /etc/os-release
  raw: "([ -f /etc/os-release ] && grep '^NAME=' /etc/os-release | sed s'/NAME=//' | tr -d \\\") || ([ -f /etc/redhat-release ] && cat /etc/redhat-release | cut '-d ' -f1)"
  register: distro_st
  failed_when: false
  changed_when: false
  vars:
    ansible_become: false

- name: set distro facts
  set_fact:
    distro: "{{ distro_st.stdout | trim }}"

- name: python check
  raw: python --version
  register: py_st
  failed_when: false
  changed_when: false
  vars:
    ansible_become: false

- name: set has_python facts
  set_fact:
    has_python: true

- name: set has_python facts
  set_fact:
    has_python: false
  when: "'command not found' in py_st.stdout"

- include: coreos.yml
  static: no
  when:
    - "'CoreOS' in distro and not has_python"
    - ansible_user == 'root'
  vars:
    - ansible_become: false

- include: coreos.yml
  static: no
  become: true
  when:
    - "'CoreOS' in distro and not has_python"
    - ansible_user != 'root'

- include: root_tasks.yml
  static: no
  when:
    - "'CoreOS' not in distro"
    - ansible_user == 'root'
  vars:
    - ansible_become: false

- include: root_tasks.yml
  static: no
  become: true
  when:
    - "'CoreOS' not in distro"
    - ansible_user != 'root'
