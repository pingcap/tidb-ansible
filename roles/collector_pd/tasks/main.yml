---

- set_fact:
    collector_dir: "{{ hostvars[groups.monitored_servers[0]].deploy_dir }}"
    service_host: "{{ ansible_host }}"

- name: create pd fetch directory
  delegate_to: localhost
  file: path={{ item }} state=directory mode=0755
  with_items:
    - "{{ fetch_tmp_dir }}/{{ service_host }}"

- include_tasks: collect_log.yml
- include_tasks: collect_config.yml

- name: collect PD information
  shell: python {{ collector_dir }}/scripts/tidb-insight/insight.py --output={{ pd_log_dir }} --alias={{ inventory_hostname }} --pdctl --pd-host={{ ansible_host }} --pd-port={{ pd_client_port }}

- name: collect basic system information
  shell: python {{ collector_dir }}/scripts/tidb-insight/insight.py --output={{ pd_log_dir }} --alias={{ inventory_hostname }} --collector

- name: compress collected data
  shell: "python {{ collector_dir }}/scripts/tidb-insight/insight.py --compress --output={{ pd_log_dir }} --alias={{ inventory_hostname }}"

- name: fetch pd diagnosis tarball with bandwidth limit
  delegate_to: localhost
  shell: "scp -P {{ ansible_port|default(22) }} -l {{ collect_bandwidth_limit|default('10000') }} -o StrictHostKeyChecking=no {{ service_host }}:{{ pd_log_dir }}/{{ inventory_hostname }}.tar.gz {{ fetch_tmp_dir }}/{{ service_host }}/pd_{{ inventory_hostname }}.tar.gz"
  when: enable_bandwidth_limit|default(true)

- name: fetch pd diagnosis tarball without bandwidth limit
  fetch:
    src: "{{ pd_log_dir }}/{{ inventory_hostname }}.tar.gz"
    dest: "{{ fetch_tmp_dir }}/{{ service_host }}/pd_{{ inventory_hostname }}.tar.gz"
    flat: yes
  when: not enable_bandwidth_limit|default(true)

- name: remove pd temporary diagnosis tarball
  file:
    path: "{{ pd_log_dir }}/{{ item }}"
    state: absent
  with_items:
    - "{{ inventory_hostname }}.tar.gz"
