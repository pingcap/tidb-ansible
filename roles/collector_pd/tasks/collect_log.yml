---

- name: check pd log directory
  stat: path={{ pd_log_dir }} get_md5=false get_checksum=false
  register: log_dir_st

- fail:
    msg: "{{ pd_log_dir }} must exist and is a directory"
  when: log_dir_st.stat.isdir is not defined or log_dir_st.stat.isdir == False

- name: collect pd log
  shell: "python {{ collector_dir }}/scripts/tidb-insight/insight.py -l --log-dir={{ pd_log_dir }} --log-prefix=pd --log-retention={{ collect_log_recent_hours | default('2') }} --output={{ pd_log_dir }} --alias={{ inventory_hostname }} --compress"

- name: fetch pd log tarball with bandwidth limit
  delegate_to: localhost
  shell: "scp -P {{ ansible_port|default(22) }} -l {{ collect_bandwidth_limit|default('10000') }} -o StrictHostKeyChecking=no {{ service_host }}:{{ pd_log_dir }}/{{ inventory_hostname }}.tar.gz {{ fetch_tmp_dir }}/{{ service_host }}/pd_{{ inventory_hostname }}.tar.gz"
  when: enable_bandwidth_limit|default(true)

- name: fetch pd log tarball without bandwidth limit
  fetch:
    src: "{{ pd_log_dir }}/{{ inventory_hostname }}.tar.gz"
    dest: "{{ fetch_tmp_dir }}/{{ service_host }}/pd_{{ inventory_hostname }}.tar.gz"
    flat: yes
  when: not enable_bandwidth_limit|default(true)

- name: remove pd temporary log tarball
  file:
    path: "{{ pd_log_dir }}/{{ item }}"
    state: absent
  with_items:
    - "{{ inventory_hostname }}.tar.gz"
