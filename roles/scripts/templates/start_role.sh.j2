#!/bin/bash
set -e

# WARNING: This file was auto-generated. Do not edit!
#          All your edit might be overwritten!
DEPLOY_USER="{{ deploy_user }}"
STATUS_DIR="{{ role_status_dir }}"
DEPLOY_DIR="{{ deploy_dir }}"

cd "${DEPLOY_DIR}" || (echo "error: deploy dir not exists!"; exit 1)

# running as root?
if [ "$(id -u)" -eq 0 ]; then
    echo "warning: run as root is dangerous! try switch to user: ${DEPLOY_USER}!"
    echo "error: did nothing!"
    exit 1
fi

# try up
bin/svc -u "${STATUS_DIR}" &>/dev/null || true

# check by svstat
_check=$(bin/svstat "${STATUS_DIR}" 2>/dev/null)
if echo "${_check}" | grep 'up pid' &>/dev/null; then
    _pid=$(echo "${_check}" | cut -d' ' -f 4)
    if [ -e "/proc/${_pid}/cwd" ] && [ "$(readlink /proc/${_pid}/cwd)" == "${DEPLOY_DIR}" ]; then
        echo "ok: already started!"
        exit 0
    else
        echo "warning: status dir is not clean"
        rm "${STATUS_DIR}/pid"
    fi
fi

# check by pid
if [ -e "${STATUS_DIR}/pid" ]; then
    _pid=$(cat "${STATUS_DIR}/pid")
    if [ -e "/proc/${_pid}/cwd" ] && [ "$(readlink /proc/${_pid}/cwd)" == "${DEPLOY_DIR}" ]; then
        echo "ok: already started!"
        exit 0
    else
        echo "warning: status dir is not clean"
        rm "${STATUS_DIR}/pid"
    fi
    # if ps aux | grep supervise | grep -v grep | grep "${_pid}" &>/dev/null; then
    #     echo "error: supervise of pid ${_pid} is alive! but process is down!"
    #     exit 1
    # fi
fi

nohup bin/supervise "${STATUS_DIR}" "${DEPLOY_DIR}/scripts/run_{{ this_role_name | default(role_name) }}.sh" &>/dev/null &

echo $! > "${STATUS_DIR}/pid"
echo "ok: started!"
