---
# tasks file for pd

- name: create deploy directories
  file: path={{ item }} state=directory mode=0755
  with_items:
  - "{{ pd_log_dir }}"
  - "{{ pd_data_dir }}"
  - "{{ pd_status_dir }}"
  - "{{ deploy_dir }}/conf/pd.toml.d"

- name: deply binary
  copy: src="{{ resources_dir }}/bin/pd-server" dest="{{ deploy_dir }}/bin/" mode=0755 backup=yes
  register: pd_binary

- name: backup bianry file
  command: mv "{{ pd_binary.backup_file }}" "{{ backup_dir }}"
  when: pd_binary.changed and pd_binary.backup_file is defined

#- name: create config file
#  template: src=pd.toml.j2 dest={{ deploy_dir }}/conf/pd.toml.d/0 mode=0644
 
- name: create configuration file
  template: src=pd.toml.j2 dest={{ deploy_dir }}/conf/pd.toml mode=0644 backup=yes
  register: pd_conf

- name: backup conf file
  command: mv "{{ pd_conf.backup_file }}" "{{ backup_dir }}"
  when: pd_conf.changed and pd_conf.backup_file is defined

- name: create startup script
  template: src={{ item }}.j2 dest={{ deploy_dir }}/scripts/{{ item }} mode=0755 backup=yes
  with_items:
  - start_{{ role_name }}.sh
  - stop_{{ role_name }}.sh

- name: prepare firewalld white list
  set_fact:
    firewalld_ports: "{{ [pd_peer_port ~ '/tcp', pd_client_port ~ '/tcp'] + firewalld_ports }}"

