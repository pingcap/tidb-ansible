---

- set_fact:
    tidb_check_dir: "/tmp/tidb_check_config"
    tidb_host: "{{ hostvars[groups.tidb_servers[0]].ansible_host | default(hostvars[groups.tidb_servers[0]].inventory_hostname) }}"

- name: Create temporary check directory
  file: name={{ tidb_check_dir }} state=directory

- name: Load TiDB default vars
  include_vars: file={{ playbook_dir }}/roles/tidb/defaults/main.yml name=tidb_vars_check

- name: Load TiDB group vars
  include_vars: file={{ playbook_dir }}/group_vars/tidb_servers.yml name=tidb_vars_check

- name: "Load customized config: tidb-ansible/conf/tidb.yml"
  include_vars: file={{ playbook_dir }}/conf/tidb.yml name=tidb_conf_custom_check

- name: Load default config
  include_vars: file={{ playbook_dir }}/roles/tidb/vars/default.yml name=tidb_conf_default_check

- name: generate dynamic config
  set_fact:
    tidb_conf_generated_check:
      security:
        cluster-ssl-ca: >-
          {%- if enable_tls|default(false) -%}{{ tidb_cert_dir }}/ca.pem{%- else -%}{%- endif -%}
        cluster-ssl-cert: >-
          {%- if enable_tls|default(false) -%}{{ tidb_cert_dir }}/tidb-server-{{ tidb_host }}.pem{%- else -%}{%- endif -%}
        cluster-ssl-key: >-
          {%- if enable_tls|default(false) -%}{{ tidb_cert_dir }}/tidb-server-{{ tidb_host }}-key.pem{%- else -%}{%- endif -%}

- name: Generate final config
  set_fact:
    tidb_conf: "{{ tidb_conf_custom_check | with_default_dicts(tidb_conf_generated_check, tidb_conf_default_check) | update_default_dicts }}"

- name: Create configuration file
  template: src={{ playbook_dir }}/roles/tidb/templates/tidb.toml.j2 dest={{ tidb_check_dir }}/tidb.toml mode=0644 backup=yes

- name: Deploy TiDB binary
  copy: src="{{ resources_dir }}/bin/tidb-server" dest="{{ tidb_check_dir }}/" mode=0755 backup=yes

- name: Check TiDB config
  shell: cd {{ tidb_check_dir }} && ./tidb-server -config ./tidb.toml -config-check
  register: tidb_check_result

- name: Delete temporary check directory
  file: name={{ tidb_check_dir }} state=absent

- name: Check result
  fail:
    msg: "TiDB config error"
  when: "'successful' not in tidb_check_result.stdout"
