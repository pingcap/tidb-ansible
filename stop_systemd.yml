---
# Copyright 2016 PingCAP, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# See the License for the specific language governing permissions and
# limitations under the License.

# The playbook of TiDB

- hosts: monitored_servers
  tags:
    - node_exporter
  tasks:
    - name: stop node_exporter by systemd
      systemd: name=node_exporter.service state=stopped enabled=no
      become: true
      when: use_systemd and ansible_user != "root"

    - name: stop node_exporter by systemd
      systemd: name=node_exporter.service state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root

- hosts: monitoring_servers
  tags:
    - pushgateway
    - prometheus
  tasks:
    - name: stop monitoring modules by systemd
      systemd: name={{ item }} state=stopped enabled=no
      when: use_systemd and ansible_user != "root"
      become: true
      with_items:
        - pushgateway.service
        - prometheus.service

    - name: stop monitoring modules by systemd
      systemd: name={{ item }} state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      with_items:
        - pushgateway.service
        - prometheus.service
      vars:
        - ansible_become: false
        - ansible_become_user: root

- hosts: pd_servers
  tags:
    - pd
  tasks:
    - name: stop PD by systemd
      systemd: name=pd.service state=stopped enabled=no
      become: true
      when: use_systemd and ansible_user != "root"

    - name: stop PD by systemd
      systemd: name=pd.service state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root

- hosts: tikv_servers
  tags:
    - tikv
  tasks:
    - name: stop TiKV by systemd
      systemd: name=tikv@{{ tikv_port }}.service state=stopped enabled=no
      become: true
      when: use_systemd and ansible_user != "root"

    - name: stop TiKV by systemd
      systemd: name=tikv@{{ tikv_port }}.service state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root

- hosts: tidb_servers
  tags:
    - tidb
  tasks:
    - name: stop TiDB by systemd
      systemd: name=tidb@{{ tidb_port }}.service state=stopped enabled=no
      become: true
      when: use_systemd and ansible_user != "root"

    - name: stop TiDB by systemd
      systemd: name=tidb@{{ tidb_port }}.service state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root

    - name: stop pump by systemd
      systemd: name=pump.service state=stopped enabled=no
      become: true
      when: enable_binlog and use_systemd and ansible_user != "root"

    - name: stop pump by systemd
      systemd: name=pump.service state=stopped enabled=no
      when: enable_binlog and use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root

- hosts: grafana_servers
  # FIXME: must introduce this to load all variables
  tags:
    - grafana
  tasks:
    - name: stop monitoring modules by systemd
      systemd: name=grafana.service state=stopped enabled=no
      become: true
      when: use_systemd and ansible_user != "root"

    - name: stop monitoring modules by systemd
      systemd: name=grafana.service state=stopped enabled=no
      when: use_systemd and ansible_user == "root"
      vars:
        - ansible_become: false
        - ansible_become_user: root
